openapi: 3.0.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /create_user:
    post:
      summary: Create User
      operationId: create_user_create_user_post
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /get_user_data:
    get:
      summary: Get User
      operationId: get_user_get_user_data_get
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  anyOf:
                    - type: array
                      items:
                        type: string
                    - type: integer
                      nullable: true
                title: Response Get User Get User Data Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /update_collection:
    put:
      summary: Update User Collection
      operationId: update_user_collection_update_collection_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /update_inventory:
    put:
      summary: Update User Inventory
      operationId: update_user_inventory_update_inventory_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    User:
      properties:
        user_id:
          type: integer
          title: User Id
        collection:
          anyOf:
            - items:
                type: string
              type: array
              nullable: true
          title: Collection
        inventory:
          anyOf:
            - items:
                type: string
              type: array
              nullable: true
          title: Inventory
      type: object
      required:
        - user_id
      title: User
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
